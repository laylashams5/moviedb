{"version":3,"file":"ngx-progressbar-router.js.map","sources":["ng://@ngx-progressbar/router/lib/ng-progress-router.interface.ts","ng://@ngx-progressbar/router/lib/ng-progress-router.service.ts","ng://@ngx-progressbar/router/lib/ng-progress-router.module.ts"],"sourcesContent":["import { InjectionToken, Type } from '@angular/core';\r\nimport { RouterEvent } from '@angular/router';\r\n\r\nexport interface NgProgressRouterConfig {\r\n  id?: string;\r\n  delay?: number;\r\n  startEvents?: Type<RouterEvent>[];\r\n  completeEvents?: Type<RouterEvent>[];\r\n}\r\n\r\nexport const NG_PROGRESS_ROUTER_CONFIG = new InjectionToken<NgProgressRouterConfig>('ngProgressRouterConfig');\r\n","import { Injectable, Optional, Inject, Type } from '@angular/core';\r\nimport { Router, NavigationStart, NavigationEnd, NavigationCancel, NavigationError, RouterEvent } from '@angular/router';\r\nimport { of } from 'rxjs';\r\nimport { tap, delay, switchMap, filter } from 'rxjs/operators';\r\nimport { NgProgress } from '@ngx-progressbar/core';\r\nimport { NgProgressRouterConfig, NG_PROGRESS_ROUTER_CONFIG } from './ng-progress-router.interface';\r\n\r\n/**\r\n * Check if a router event type exists in an array of router event types\r\n * @param routerEvent\r\n * @param events\r\n */\r\nfunction eventExists(routerEvent: RouterEvent, events: Type<RouterEvent>[]) {\r\n  let res = false;\r\n  events.map((event: Type<RouterEvent>) => res = res || routerEvent instanceof event);\r\n  return res;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NgProgressRouter {\r\n  private readonly _config: NgProgressRouterConfig = {\r\n    id: 'root',\r\n    delay: 0,\r\n    startEvents: [NavigationStart],\r\n    completeEvents: [NavigationEnd, NavigationCancel, NavigationError]\r\n  };\r\n\r\n  constructor(progress: NgProgress, router: Router, @Optional() @Inject(NG_PROGRESS_ROUTER_CONFIG) config: NgProgressRouterConfig) {\r\n    this._config = config ? {...this._config, ...config} : this._config;\r\n    const progressRef = progress.ref(this._config.id);\r\n\r\n    const startProgress = of({}).pipe(\r\n      tap(() => progressRef.start())\r\n    );\r\n\r\n    const completeProgress = of({}).pipe(\r\n      delay(this._config.delay),\r\n      tap(() => progressRef.complete())\r\n    );\r\n\r\n    const filterEvents = [...this._config.startEvents, ...this._config.completeEvents];\r\n\r\n    router.events.pipe(\r\n      filter((event: RouterEvent) => eventExists(event, filterEvents)),\r\n      switchMap((event: RouterEvent) => eventExists(event, this._config.startEvents) ? startProgress : completeProgress)\r\n    ).subscribe();\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { NgProgressRouterConfig, NG_PROGRESS_ROUTER_CONFIG } from './ng-progress-router.interface';\r\nimport { NgProgressRouter } from './ng-progress-router.service';\r\n\r\n@NgModule({})\r\nexport class NgProgressRouterModule {\r\n\r\n  // Inject the service to activate it\r\n  constructor(ngProgressRouter: NgProgressRouter) {\r\n  }\r\n\r\n  static withConfig(config: NgProgressRouterConfig): ModuleWithProviders {\r\n    return {\r\n      ngModule: NgProgressRouterModule,\r\n      providers: [\r\n        { provide: NG_PROGRESS_ROUTER_CONFIG, useValue: config }\r\n      ]\r\n    };\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;AAAA;AAUA,MAAa,yBAAyB,GAAG,IAAI,cAAc,CAAyB,wBAAwB,CAAC;;;;;;ACV7G;;;;;;AAYA,SAAS,WAAW,CAAC,WAAwB,EAAE,MAA2B;;QACpE,GAAG,GAAG,KAAK;IACf,MAAM,CAAC,GAAG;;;;IAAC,CAAC,KAAwB,KAAK,GAAG,GAAG,GAAG,IAAI,WAAW,YAAY,KAAK,EAAC,CAAC;IACpF,OAAO,GAAG,CAAC;CACZ;AAKD,MAAa,gBAAgB;;;;;;IAQ3B,YAAY,QAAoB,EAAE,MAAc,EAAiD,MAA8B;QAP9G,YAAO,GAA2B;YACjD,EAAE,EAAE,MAAM;YACV,KAAK,EAAE,CAAC;YACR,WAAW,EAAE,CAAC,eAAe,CAAC;YAC9B,cAAc,EAAE,CAAC,aAAa,EAAE,gBAAgB,EAAE,eAAe,CAAC;SACnE,CAAC;QAGA,IAAI,CAAC,OAAO,GAAG,MAAM,qBAAO,IAAI,CAAC,OAAO,EAAK,MAAM,IAAI,IAAI,CAAC,OAAO,CAAC;;cAC9D,WAAW,GAAG,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;;cAE3C,aAAa,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAC/B,GAAG;;;QAAC,MAAM,WAAW,CAAC,KAAK,EAAE,EAAC,CAC/B;;cAEK,gBAAgB,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAClC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EACzB,GAAG;;;QAAC,MAAM,WAAW,CAAC,QAAQ,EAAE,EAAC,CAClC;;cAEK,YAAY,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC;QAElF,MAAM,CAAC,MAAM,CAAC,IAAI,CAChB,MAAM;;;;QAAC,CAAC,KAAkB,KAAK,WAAW,CAAC,KAAK,EAAE,YAAY,CAAC,EAAC,EAChE,SAAS;;;;QAAC,CAAC,KAAkB,KAAK,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,aAAa,GAAG,gBAAgB,EAAC,CACnH,CAAC,SAAS,EAAE,CAAC;KACf;;;YA9BF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;YAhBQ,UAAU;YAHV,MAAM;4CA4BsC,QAAQ,YAAI,MAAM,SAAC,yBAAyB;;;;;;;;AC7BjG,MAKa,sBAAsB;;;;;IAGjC,YAAY,gBAAkC;KAC7C;;;;;IAED,OAAO,UAAU,CAAC,MAA8B;QAC9C,OAAO;YACL,QAAQ,EAAE,sBAAsB;YAChC,SAAS,EAAE;gBACT,EAAE,OAAO,EAAE,yBAAyB,EAAE,QAAQ,EAAE,MAAM,EAAE;aACzD;SACF,CAAC;KACH;;;YAdF,QAAQ,SAAC,EAAE;;;;YAFH,gBAAgB;;;;;;;;;;;;;;;"}
